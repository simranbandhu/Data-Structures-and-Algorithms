#include <iostream>
using namespace std;

class heap{
    public:
    int arr[100];
    int size;
    
    heap(){
        arr[0] = -1;
        size = 0;
    }
    
    void insert(int val){
        size = size + 1;
        int index = size;
        arr[index] = val;
        
        while(index > 1){
            int parent = index/2;
            if(arr[parent] < arr[index]){
                swap(arr[parent], arr[index]);
                index = parent;
            }
            else{
                return ;
            }
        }
    }
    
    void print(){
        for(int i=1; i<=size; i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
    void deletion(){
        if(size == 0){
            cout<<"nothing to delete"<<endl;
            return ;
        }
        arr[1] = arr[size];
        size--;
        int index = 1;
        while(index <= size) {
            int leftIndex = 2*index;
            int rightIndex = (2*index) + 1;
            int nextIndex = index;

            if (leftIndex < size && arr[nextIndex] < arr[leftIndex]) {
                nextIndex = leftIndex;
            }

            if (rightIndex < size && arr[nextIndex] < arr[rightIndex]) {
                nextIndex = rightIndex;
            }

            if (nextIndex == index) break;
            else {
                swap (arr[nextIndex], arr[index]);
                index = nextIndex;
            }
        }
    }
};

void heapify(int arr[], int n, int i){
    int largest = i;
    int leftside = 2*i;
    int rightside = 2*i+1;
    
    if(leftside <= n && arr[largest] < arr[leftside]){
        largest = leftside;
    }
    if(rightside <= n && arr[largest] < arr[rightside]){
        largest = rightside;
    }
    
    if(largest != i){
        swap(arr[largest], arr[i]);
        heapify(arr, n, largest);
    }
}


void heapsort(int arr[], int n){
    int size = n;
    
    while(size > 1){
        swap(arr[size], arr[1]);
        size--;
        
        heapify(arr,size, 1);
    }
}


int main()
{
    heap h;
    h.insert(50);
    h.insert(55);
    h.insert(53);
    h.insert(52);
    h.insert(54);
    h.print();
    
    h.deletion();
    h.print();
    
    int arr[6] = {-1, 50, 55, 53, 52, 54};
    int n = 5;
    
    for(int i=n/2; i>0; i--){
        heapify(arr,n,i);
    }
    cout<<"printing"<<endl;
    for(int i=1; i<=n; i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    
    heapsort(arr,5);
    cout<<"printing heap"<<endl;
    for(int i=1; i<=n; i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    

    return 0;
}
